BEGIN;

CREATE TABLE IF NOT EXISTS users (
   id BIGINT AUTO_INCREMENT PRIMARY KEY,
   user_id VARCHAR(255) NOT NULL,
   first_name VARCHAR(255),
   last_name VARCHAR(255),
   email VARCHAR(255),
   phone VARCHAR(255),
   bio VARCHAR(255),
   reference_id VARCHAR(255),
   qr_code_secret VARCHAR(255),
   qr_code_image_url TEXT,
   image_url VARCHAR(255),
   last_login TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
   login_attempts INTEGER DEFAULT 0,
   mfa BOOLEAN NOT NULL DEFAULT FALSE,
   enabled BOOLEAN NOT NULL DEFAULT FALSE,
   account_non_expired BOOLEAN NOT NULL DEFAULT FALSE,
   account_non_locked BOOLEAN NOT NULL DEFAULT FALSE,
   created_by BIGINT NOT NULL,
   updated_by BIGINT NOT NULL,
   created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
   updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
   CONSTRAINT uq_users_email UNIQUE(email),
   CONSTRAINT uq_users_user_id UNIQUE(user_id),
   CONSTRAINT fk_users_created_by FOREIGN KEY (created_by) REFERENCES users(id) ON UPDATE CASCADE ON DELETE CASCADE,
   CONSTRAINT fk_users_updated_by FOREIGN KEY (updated_by) REFERENCES users(id) ON UPDATE CASCADE ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS credentials (
    id BIGINT AUTO_INCREMENT PRIMARY KEY,
    password VARCHAR(255) NOT NULL,
    reference_id VARCHAR(255),
    user_id BIGINT NOT NULL,
    created_by BIGINT NOT NULL,
    updated_by BIGINT NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    CONSTRAINT uq_credentials_user_id UNIQUE(user_id),
    CONSTRAINT fk_credentials_user_id FOREIGN KEY(user_id) REFERENCES users(id) ON UPDATE CASCADE ON DELETE CASCADE,
    CONSTRAINT fk_credentials_created_by FOREIGN KEY(created_by) REFERENCES users(id) ON UPDATE CASCADE ON DELETE CASCADE,
    CONSTRAINT fk_credentials_updated_by FOREIGN KEY(updated_by) REFERENCES users(id) ON UPDATE CASCADE ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS documents (
  id BIGINT AUTO_INCREMENT PRIMARY KEY,
  document_id VARCHAR(255) NOT NULL,
  file_extension VARCHAR(10) NOT NULL,
  formatted_size VARCHAR(255),
  icon VARCHAR(255),
  document_name VARCHAR(255),
  file_size BIGINT NOT NULL,
  uri VARCHAR(255),
  description VARCHAR(255),
  reference_id VARCHAR(255),
  created_by BIGINT NOT NULL,
  updated_by BIGINT NOT NULL,
  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  CONSTRAINT uq_documents_document_id UNIQUE(document_id),
  CONSTRAINT fk_document_created_by FOREIGN KEY(created_by) REFERENCES users(id) ON UPDATE CASCADE ON DELETE CASCADE,
  CONSTRAINT fk_document_updated_by FOREIGN KEY(updated_by) REFERENCES users(id) ON UPDATE CASCADE ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS roles (
  id BIGINT AUTO_INCREMENT PRIMARY KEY,
  authority VARCHAR(255),
  name VARCHAR(255),
  reference_id VARCHAR(255),
  created_by BIGINT NOT NULL,
  updated_by BIGINT NOT NULL,
  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  CONSTRAINT fk_roles_created_by FOREIGN KEY(created_by) REFERENCES users(id) ON UPDATE CASCADE ON DELETE CASCADE,
  CONSTRAINT fk_roles_updated_by FOREIGN KEY(updated_by) REFERENCES users(id) ON UPDATE CASCADE ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS user_roles (
  id BIGINT AUTO_INCREMENT PRIMARY KEY,
  user_id BIGINT NOT NULL,
  role_id BIGINT NOT NULL,
  CONSTRAINT fk_user_roles_user_id FOREIGN KEY(user_id) REFERENCES users(id) ON UPDATE CASCADE ON DELETE CASCADE,
  CONSTRAINT fk_user_roles_role_id FOREIGN KEY(role_id) REFERENCES roles(id) ON UPDATE CASCADE ON DELETE CASCADE 
);

-- Create indexes without IF NOT EXISTS
CREATE INDEX index_users_email ON users(email);
CREATE INDEX index_users_user_id ON users(user_id);
CREATE INDEX index_documents_document_id ON documents(document_id);
CREATE INDEX index_credentials_user_id ON credentials(user_id);
CREATE INDEX index_user_roles_user_id ON user_roles(user_id);

COMMIT;
